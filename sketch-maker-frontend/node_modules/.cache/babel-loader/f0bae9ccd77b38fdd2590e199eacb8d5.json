{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/mnt/c/Users/Zach/dev/flatiron/labs/_projects/p5-sketch-maker/sketch-maker-frontend/src/components/sketch.js\";\nimport React from \"react\";\nimport Sketch from \"react-p5\";\nimport urls from \"./data\";\n/*just testing importing data from other components*/\n\nexport default (props => {\n  let angle = 0;\n\n  const setup = (p5, canvasParentRef) => {\n    console.log(urls); // use parent to render the canvas in this ref\n    // (without that p5 will render the canvas outside of your component)\n\n    p5.createCanvas(p5.windowWidth, p5.windowHeight).parent(canvasParentRef);\n    let canvas = document.querySelector(\"#defaultCanvas0\");\n    canvas.toBlob(b => {\n      console.log(blobToFile(b, \"img\")); // fetch post request with blobToFile(b, \"img\") as obj\n      // fetch(\"http://http://localhost:3001\").\n    });\n    p5.angleMode(p5.DEGREES);\n    p5.rectMode(p5.CENTER); // debugger;\n  };\n\n  const draw = p5 => {\n    p5.background(200, 60, 60);\n    p5.translate(p5.width * 0.5, p5.height * 0.5);\n    p5.rotate(angle);\n    p5.textAlign(p5.CENTER, p5.CENTER);\n    p5.textSize(30);\n    p5.text(\"Hello from my p5.js sketch!\", 0, 0);\n    angle += 0.5;\n  };\n\n  const windowResized = p5 => {\n    p5.resizeCanvas(p5.windowWidth, p5.windowHeight);\n  };\n\n  const blobToFile = (blob, fileName) => {\n    blob.lastModifiedDate = new Date();\n    blob.name = fileName;\n    return blob;\n  };\n\n  return /*#__PURE__*/_jsxDEV(Sketch, {\n    setup: setup,\n    draw: draw,\n    windowResized: windowResized\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 12\n  }, this);\n});","map":{"version":3,"sources":["/mnt/c/Users/Zach/dev/flatiron/labs/_projects/p5-sketch-maker/sketch-maker-frontend/src/components/sketch.js"],"names":["React","Sketch","urls","props","angle","setup","p5","canvasParentRef","console","log","createCanvas","windowWidth","windowHeight","parent","canvas","document","querySelector","toBlob","b","blobToFile","angleMode","DEGREES","rectMode","CENTER","draw","background","translate","width","height","rotate","textAlign","textSize","text","windowResized","resizeCanvas","blob","fileName","lastModifiedDate","Date","name"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AAA0B;;AAE1B,gBAAgBC,KAAD,IAAW;AACtB,MAAIC,KAAK,GAAG,CAAZ;;AAEA,QAAMC,KAAK,GAAG,CAACC,EAAD,EAAKC,eAAL,KAAyB;AACnCC,IAAAA,OAAO,CAACC,GAAR,CAAYP,IAAZ,EADmC,CAEnC;AACA;;AACAI,IAAAA,EAAE,CAACI,YAAH,CAAgBJ,EAAE,CAACK,WAAnB,EAAgCL,EAAE,CAACM,YAAnC,EAAiDC,MAAjD,CAAwDN,eAAxD;AACA,QAAIO,MAAM,GAAGC,QAAQ,CAACC,aAAT,CAAuB,iBAAvB,CAAb;AACAF,IAAAA,MAAM,CAACG,MAAP,CAAcC,CAAC,IAAI;AACfV,MAAAA,OAAO,CAACC,GAAR,CAAYU,UAAU,CAACD,CAAD,EAAI,KAAJ,CAAtB,EADe,CAEf;AACA;AACH,KAJD;AAKAZ,IAAAA,EAAE,CAACc,SAAH,CAAad,EAAE,CAACe,OAAhB;AACAf,IAAAA,EAAE,CAACgB,QAAH,CAAYhB,EAAE,CAACiB,MAAf,EAZmC,CAanC;AACH,GAdD;;AAgBA,QAAMC,IAAI,GAAIlB,EAAD,IAAQ;AACjBA,IAAAA,EAAE,CAACmB,UAAH,CAAc,GAAd,EAAmB,EAAnB,EAAuB,EAAvB;AACAnB,IAAAA,EAAE,CAACoB,SAAH,CAAapB,EAAE,CAACqB,KAAH,GAAS,GAAtB,EAA2BrB,EAAE,CAACsB,MAAH,GAAU,GAArC;AACAtB,IAAAA,EAAE,CAACuB,MAAH,CAAUzB,KAAV;AACAE,IAAAA,EAAE,CAACwB,SAAH,CAAaxB,EAAE,CAACiB,MAAhB,EAAwBjB,EAAE,CAACiB,MAA3B;AACAjB,IAAAA,EAAE,CAACyB,QAAH,CAAY,EAAZ;AACAzB,IAAAA,EAAE,CAAC0B,IAAH,CAAQ,6BAAR,EAAuC,CAAvC,EAA0C,CAA1C;AACA5B,IAAAA,KAAK,IAAG,GAAR;AACH,GARD;;AAUA,QAAM6B,aAAa,GAAI3B,EAAD,IAAQ;AAC1BA,IAAAA,EAAE,CAAC4B,YAAH,CAAgB5B,EAAE,CAACK,WAAnB,EAAgCL,EAAE,CAACM,YAAnC;AACH,GAFD;;AAOA,QAAMO,UAAU,GAAG,CAACgB,IAAD,EAAOC,QAAP,KAAoB;AACnCD,IAAAA,IAAI,CAACE,gBAAL,GAAwB,IAAIC,IAAJ,EAAxB;AACAH,IAAAA,IAAI,CAACI,IAAL,GAAYH,QAAZ;AACA,WAAOD,IAAP;AACH,GAJD;;AAMA,sBAAO,QAAC,MAAD;AAAQ,IAAA,KAAK,EAAE9B,KAAf;AAAsB,IAAA,IAAI,EAAEmB,IAA5B;AAAkC,IAAA,aAAa,EAAES;AAAjD;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,CA3CD","sourcesContent":["import React from \"react\";\r\nimport Sketch from \"react-p5\";\r\nimport urls from \"./data\" /*just testing importing data from other components*/\r\n \r\nexport default (props) => {\r\n    let angle = 0;\r\n \r\n    const setup = (p5, canvasParentRef) => {\r\n        console.log(urls)\r\n        // use parent to render the canvas in this ref\r\n        // (without that p5 will render the canvas outside of your component)\r\n        p5.createCanvas(p5.windowWidth, p5.windowHeight).parent(canvasParentRef);\r\n        let canvas = document.querySelector(\"#defaultCanvas0\")\r\n        canvas.toBlob(b => {\r\n            console.log(blobToFile(b, \"img\"))\r\n            // fetch post request with blobToFile(b, \"img\") as obj\r\n            // fetch(\"http://http://localhost:3001\").\r\n        })\r\n        p5.angleMode(p5.DEGREES)\r\n        p5.rectMode(p5.CENTER)\r\n        // debugger;\r\n    };\r\n \r\n    const draw = (p5) => {\r\n        p5.background(200, 60, 60);\r\n        p5.translate(p5.width*0.5, p5.height*0.5);\r\n        p5.rotate(angle)\r\n        p5.textAlign(p5.CENTER, p5.CENTER);\r\n        p5.textSize(30)\r\n        p5.text(\"Hello from my p5.js sketch!\", 0, 0);\r\n        angle+= 0.5;\r\n    };\r\n\r\n    const windowResized = (p5) => {\r\n        p5.resizeCanvas(p5.windowWidth, p5.windowHeight);\r\n    }\r\n\r\n\r\n\r\n\r\n    const blobToFile = (blob, fileName) => {\r\n        blob.lastModifiedDate = new Date();\r\n        blob.name = fileName;\r\n        return blob\r\n    }\r\n \r\n    return <Sketch setup={setup} draw={draw} windowResized={windowResized}/>;\r\n};"]},"metadata":{},"sourceType":"module"}